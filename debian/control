Source: pyfftw
Maintainer: Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>
Uploaders: Ghislain Antony Vaillant <ghisvail@gmail.com>
Section: python
Priority: optional
Build-Depends:
 debhelper (>= 9),
 libfftw3-dev (>= 3.3),
 cython,
 cython-dbg,
 python-all-dbg,
 python-all-dev,
 python-numpy,
 python-numpy-dbg,
 cython3,
 cython3-dbg,
 python3-all-dbg,
 python3-all-dev,
 python3-numpy,
 python3-numpy-dbg
Standards-Version: 3.9.6
Vcs-Browser: http://anonscm.debian.org/gitweb/?p=debian-science/packages/pyfftw.git
Vcs-Git: git://anonscm.debian.org/debian-science/packages/pyfftw.git
Homepage: http://hgomersall.github.io/pyFFTW/
X-Python-Version: >= 2.7
X-Python3-Version: >= 3.2

Package: python-pyfftw
Architecture: any
Depends:
 libfftw3-double3,
 libfftw3-long3 [!armel !armhf],
 libfftw3-single3,
 python-numpy,
 ${shlibs:Depends},
 ${python:Depends},
 ${misc:Depends}
Provides: python-fftw3
Conflicts: python-fftw3
Replaces: python-fftw3
Description: Pythonic wrapper around FFTW - Python 2
 Pythonic wrapper around FFTW, the speedy FFT library. The ultimate
 aim is to present a unified interface for all the possible transforms
 that FFTW can perform.
 .
 Both the complex DFT and the real DFT are supported, as well as
 arbitrary axes of abitrary shaped and strided arrays, which makes it
 almost feature equivalent to standard and real FFT functions of
 numpy.fft (indeed, it supports the clongdouble dtype which numpy.fft
 does not).
 .
 This package provides the Python 2 bindings.

Package: python-pyfftw-dbg
Architecture: any
Priority: extra
Section: debug
Depends: 
 python-pyfftw (= ${binary:Version}),
 ${shlibs:Depends},
 ${python:Depends},
 ${misc:Depends}
Recommends:
 python-dbg,
 python-numpy-dbg
Provides: python-fftw3-dbg
Conflicts: python-fftw3-dbg
Replaces: python-fftw3-dbg
Description: Pythonic wrapper around FFTW - Python 2 (debug)
 Pythonic wrapper around FFTW, the speedy FFT library. The ultimate
 aim is to present a unified interface for all the possible transforms
 that FFTW can perform.
 .
 Both the complex DFT and the real DFT are supported, as well as
 arbitrary axes of abitrary shaped and strided arrays, which makes it
 almost feature equivalent to standard and real FFT functions of
 numpy.fft (indeed, it supports the clongdouble dtype which numpy.fft
 does not).
 .
 This package provides the debugging information of the Python 2 bindings.

Package: python3-pyfftw
Architecture: any
Depends:
 libfftw3-double3,
 libfftw3-long3 [!armel !armhf],
 libfftw3-single3,
 python3-numpy,
 ${shlibs:Depends},
 ${python3:Depends},
 ${misc:Depends}
Provides: python3-fftw3
Conflicts: python3-fftw3
Replaces: python3-fftw3
Description: Pythonic wrapper around FFTW - Python 3
 Pythonic wrapper around FFTW, the speedy FFT library. The ultimate
 aim is to present a unified interface for all the possible transforms
 that FFTW can perform.
 .
 Both the complex DFT and the real DFT are supported, as well as
 arbitrary axes of abitrary shaped and strided arrays, which makes it
 almost feature equivalent to standard and real FFT functions of
 numpy.fft (indeed, it supports the clongdouble dtype which numpy.fft
 does not).
 .
 This package provides the Python 3 binding.

Package: python3-pyfftw-dbg
Architecture: any
Priority: extra
Section: debug
Depends: 
 python3-pyfftw (= ${binary:Version}),
 ${shlibs:Depends},
 ${python3:Depends},
 ${misc:Depends}
Recommends:
 python3-dbg,
 python3-numpy-dbg
Provides: python3-fftw3-dbg
Conflicts: python3-fftw3-dbg
Replaces: python3-fftw3-dbg
Description: Pythonic wrapper around FFTW - Python 3 (debug)
 Pythonic wrapper around FFTW, the speedy FFT library. The ultimate
 aim is to present a unified interface for all the possible transforms
 that FFTW can perform.
 .
 Both the complex DFT and the real DFT are supported, as well as
 arbitrary axes of abitrary shaped and strided arrays, which makes it
 almost feature equivalent to standard and real FFT functions of
 numpy.fft (indeed, it supports the clongdouble dtype which numpy.fft
 does not).
 .
 This package provides the debugging information of the Python 3 bindings.
